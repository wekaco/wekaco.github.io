<ptrack>
  <figure>
    <img
      src={ props.input.cover }
      crossorigin="anonymous" />
  </figure>
  <article
    id={ state.uri }
    disabled={ state.disabled }>
      <h2>{ props.input.title }</h2>
      <h3>{ props.input.username }</h3>
      <button
        name="play"
        onclick={ play }
        disabled={ state.disabled }>Play
      </button>
      <button
        name="stop"
        onclick={ pause }>Stop
      </button>
  </article>
  <style>
    /* For phone devices */
    @media (min-width: 360px) {
      :host {
        --figure-width: 100%;
        --figure-margin: 0 0 0 0;
      }
    }
    /* For tablet devices */
    @media (min-width: 640px) {
      :host {
        --figure-width: 40%;
        --figure-margin: 0 16px 32px 16px;
      }
      figure {
        float: left;
      }
    }

    @media (min-width: 1024px) {
      :host {
        --figure-margin: auto;
      }
    }
    :host {
      display: block;
      height: 100vh; 
    }
    figure {
      display: flex;
    }
    figure {
      margin: var(--figure-margin);
      width: var(--figure-width);
    }
    figure img { 
      width: 100%;
    }
    article { 
      width: 100%;
    }
    article p {
      :--webit-filter: invert(100%);
      filter: invert(100%);
    }
    article h2 {
      margin-top: 0;
    }
    article[disabled] {
      opacity: 0.6;
    }
  </style>
  <script>
    const noop = ()=>{};
  
    const SC_STREAM = 'stream_ready';
    export default function PTrack() {
      return {
        state: {
          uri: null, 
          disabled: 'disabled',
        },
        onBeforeMount(props, state) {
          state.uri = `tracks/${props.input.id}`;

          const onStreamReady = props.onStreamReady || noop;
          this.root.addEventListener(SC_STREAM, onStreamReady);

          SC.stream(state.uri).then( player => {
            const detail = { player };
            this.root
              .dispatchEvent(new CustomEvent(SC_STREAM, { detail }));

            this.update({ disabled: false });

          });
        }
      };
    };
  </script>
</ptrack>
