<app>
  <section>
    <ptrack
      each={ track in state.tracks }
      input={ track }
      onStreamReady={ foo } ></ptrack> 
  </section>
  <style>

    :host h2, h3 {
      color: white;
      -webkit-filter: invert(100%);
      filter: invert(100%);
    }
    :host { 
      /*/background-image: url('images/2019-cover.jpg');*/

    }
  </style>
  <script>
    import PTrack from './ptrack.riot';

    export default {
      state: {
        tracks: []
      },
      components: {
        PTrack
      },
      onBeforeMount(props, state) {
        SC.initialize({
          client_id: this.props.client_id
        });
        state.tracks = props.tracks.map( t => ({
          id: t.id,
          title: t.title,
          username: t.user.username,
          cover: t.artwork_url.replace('large', 't500x500'),
        }));
      },
      onUpdated() {
        console.log('updated');
      },
    };
  </script>
</app>
